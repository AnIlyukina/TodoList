{"remainingRequest":"/Users/anna1/Desktop/test1/test/node_modules/thread-loader/dist/cjs.js!/Users/anna1/Desktop/test1/test/node_modules/babel-loader/lib/index.js!/Users/anna1/Desktop/test1/test/node_modules/eslint-loader/index.js??ref--14-0!/Users/anna1/Desktop/test1/test/src/fetcher.js","dependencies":[{"path":"/Users/anna1/Desktop/test1/test/src/fetcher.js","mtime":1640791370422},{"path":"/Users/anna1/Desktop/test1/test/babel.config.js","mtime":1640528780388},{"path":"/Users/anna1/Desktop/test1/test/node_modules/cache-loader/dist/cjs.js","mtime":1640528765355},{"path":"/Users/anna1/Desktop/test1/test/node_modules/thread-loader/dist/cjs.js","mtime":1640528765356},{"path":"/Users/anna1/Desktop/test1/test/node_modules/babel-loader/lib/index.js","mtime":1640528766771},{"path":"/Users/anna1/Desktop/test1/test/node_modules/eslint-loader/index.js","mtime":1640528765607}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9hbm5hMS9EZXNrdG9wL3Rlc3QxL3Rlc3Qvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IuanMiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5qc29uLnN0cmluZ2lmeS5qcyI7CnZhciBiYXNlVXJsID0gJ2h0dHBzOi8vdG9kb2JhY2tzLmF6dXJld2Vic2l0ZXMubmV0L2FwaS9Ub2RvLyc7CmV4cG9ydCB2YXIgZ2V0VG9kb3MgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogIHZhciBfcmVmID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKHNldExvYWRpbmcpIHsKICAgIHZhciByZXNwb25zZSwgZGF0YTsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgc2V0TG9hZGluZyh0cnVlKTsKICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDE7CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA0OwogICAgICAgICAgICByZXR1cm4gZmV0Y2goIiIuY29uY2F0KGJhc2VVcmwsICJHZXRUb2RvcyIpKTsKCiAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDc7CiAgICAgICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7CgogICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICBkYXRhID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgZGF0YSk7CgogICAgICAgICAgY2FzZSAxMToKICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDExOwogICAgICAgICAgICBfY29udGV4dC50MCA9IF9jb250ZXh0WyJjYXRjaCJdKDEpOwogICAgICAgICAgICBjb25zb2xlLmxvZyhfY29udGV4dC50MCk7CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIG51bGwpOwoKICAgICAgICAgIGNhc2UgMTU6CiAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAxNTsKICAgICAgICAgICAgc2V0TG9hZGluZyhmYWxzZSk7CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5maW5pc2goMTUpOwoKICAgICAgICAgIGNhc2UgMTg6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZSwgbnVsbCwgW1sxLCAxMSwgMTUsIDE4XV0pOwogIH0pKTsKCiAgcmV0dXJuIGZ1bmN0aW9uIGdldFRvZG9zKF94KSB7CiAgICByZXR1cm4gX3JlZi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogIH07Cn0oKTsKZXhwb3J0IHZhciBjcmVhdGVUb2RvID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICB2YXIgX3JlZjIgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKHRvZG8sIHNldExvYWRpbmcpIHsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIHNldExvYWRpbmcodHJ1ZSk7CiAgICAgICAgICAgIF9jb250ZXh0Mi5wcmV2ID0gMTsKICAgICAgICAgICAgY29uc29sZS5sb2codG9kbyk7CiAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gNTsKICAgICAgICAgICAgcmV0dXJuIGZldGNoKCIiLmNvbmNhdChiYXNlVXJsLCAiQ3JlYXRlVG9kbyIpLCB7CiAgICAgICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJwogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkodG9kbyksCiAgICAgICAgICAgICAgbWV0aG9kOiAnUE9TVCcKICAgICAgICAgICAgfSk7CgogICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDEwOwogICAgICAgICAgICBicmVhazsKCiAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgIF9jb250ZXh0Mi5wcmV2ID0gNzsKICAgICAgICAgICAgX2NvbnRleHQyLnQwID0gX2NvbnRleHQyWyJjYXRjaCJdKDEpOwogICAgICAgICAgICBjb25zb2xlLmxvZyhfY29udGV4dDIudDApOwoKICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgIF9jb250ZXh0Mi5wcmV2ID0gMTA7CiAgICAgICAgICAgIHNldExvYWRpbmcoZmFsc2UpOwogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLmZpbmlzaCgxMCk7CgogICAgICAgICAgY2FzZSAxMzoKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZTIsIG51bGwsIFtbMSwgNywgMTAsIDEzXV0pOwogIH0pKTsKCiAgcmV0dXJuIGZ1bmN0aW9uIGNyZWF0ZVRvZG8oX3gyLCBfeDMpIHsKICAgIHJldHVybiBfcmVmMi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogIH07Cn0oKTsKZXhwb3J0IHZhciBkZWxldGVUb2RvID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICB2YXIgX3JlZjMgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKGlkLCBzZXRMb2FkaW5nKSB7CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTMkKF9jb250ZXh0MykgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBzZXRMb2FkaW5nKHRydWUpOwogICAgICAgICAgICBfY29udGV4dDMucHJldiA9IDE7CiAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gNDsKICAgICAgICAgICAgcmV0dXJuIGZldGNoKCIiLmNvbmNhdChiYXNlVXJsLCAiRGVsZXRlVG9kbz9pZD0iKS5jb25jYXQoaWQpKTsKCiAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gOTsKICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICBfY29udGV4dDMucHJldiA9IDY7CiAgICAgICAgICAgIF9jb250ZXh0My50MCA9IF9jb250ZXh0M1siY2F0Y2giXSgxKTsKICAgICAgICAgICAgY29uc29sZS5sb2coX2NvbnRleHQzLnQwKTsKCiAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICAgIF9jb250ZXh0My5wcmV2ID0gOTsKICAgICAgICAgICAgc2V0TG9hZGluZyhmYWxzZSk7CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuZmluaXNoKDkpOwoKICAgICAgICAgIGNhc2UgMTI6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWUzLCBudWxsLCBbWzEsIDYsIDksIDEyXV0pOwogIH0pKTsKCiAgcmV0dXJuIGZ1bmN0aW9uIGRlbGV0ZVRvZG8oX3g0LCBfeDUpIHsKICAgIHJldHVybiBfcmVmMy5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogIH07Cn0oKTsKZXhwb3J0IHZhciB1cGRhdGVUb2RvID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICB2YXIgX3JlZjQgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU0KHRvZG8sIHNldExvYWRpbmcpIHsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlNCQoX2NvbnRleHQ0KSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dDQucHJldiA9IF9jb250ZXh0NC5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIHNldExvYWRpbmcodHJ1ZSk7CiAgICAgICAgICAgIF9jb250ZXh0NC5wcmV2ID0gMTsKICAgICAgICAgICAgX2NvbnRleHQ0Lm5leHQgPSA0OwogICAgICAgICAgICByZXR1cm4gZmV0Y2goIiIuY29uY2F0KGJhc2VVcmwsICJVcGRhdGVUb2RvIiksIHsKICAgICAgICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nCiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh0b2RvKSwKICAgICAgICAgICAgICBtZXRob2Q6ICdQVVQnCiAgICAgICAgICAgIH0pOwoKICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgX2NvbnRleHQ0Lm5leHQgPSA5OwogICAgICAgICAgICBicmVhazsKCiAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgIF9jb250ZXh0NC5wcmV2ID0gNjsKICAgICAgICAgICAgX2NvbnRleHQ0LnQwID0gX2NvbnRleHQ0WyJjYXRjaCJdKDEpOwogICAgICAgICAgICBjb25zb2xlLmxvZyhfY29udGV4dDQudDApOwoKICAgICAgICAgIGNhc2UgOToKICAgICAgICAgICAgX2NvbnRleHQ0LnByZXYgPSA5OwogICAgICAgICAgICBzZXRMb2FkaW5nKGZhbHNlKTsKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NC5maW5pc2goOSk7CgogICAgICAgICAgY2FzZSAxMjoKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDQuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZTQsIG51bGwsIFtbMSwgNiwgOSwgMTJdXSk7CiAgfSkpOwoKICByZXR1cm4gZnVuY3Rpb24gdXBkYXRlVG9kbyhfeDYsIF94NykgewogICAgcmV0dXJuIF9yZWY0LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfTsKfSgpOw=="},{"version":3,"sources":["/Users/anna1/Desktop/test1/test/src/fetcher.js"],"names":["baseUrl","getTodos","setLoading","fetch","response","json","data","console","log","createTodo","todo","headers","body","JSON","stringify","method","deleteTodo","id","updateTodo"],"mappings":";;;;AAAA,IAAMA,OAAO,GAAG,+CAAhB;AAEA,OAAO,IAAMC,QAAQ;AAAA,qEAAG,iBAAOC,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACtBA,YAAAA,UAAU,CAAC,IAAD,CAAV;AADsB;AAAA;AAAA,mBAGGC,KAAK,WAAIH,OAAJ,cAHR;;AAAA;AAGdI,YAAAA,QAHc;AAAA;AAAA,mBAIDA,QAAQ,CAACC,IAAT,EAJC;;AAAA;AAIdC,YAAAA,IAJc;AAAA,6CAKbA,IALa;;AAAA;AAAA;AAAA;AAQpBC,YAAAA,OAAO,CAACC,GAAR;AARoB,6CASb,IATa;;AAAA;AAAA;AAYpBN,YAAAA,UAAU,CAAC,KAAD,CAAV;AAZoB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAARD,QAAQ;AAAA;AAAA;AAAA,GAAd;AAgBP,OAAO,IAAMQ,UAAU;AAAA,sEAAG,kBAAOC,IAAP,EAAaR,UAAb;AAAA;AAAA;AAAA;AAAA;AACxBA,YAAAA,UAAU,CAAC,IAAD,CAAV;AADwB;AAGtBK,YAAAA,OAAO,CAACC,GAAR,CAAYE,IAAZ;AAHsB;AAAA,mBAIhBP,KAAK,WAAIH,OAAJ,iBAAyB;AAClCW,cAAAA,OAAO,EAAE;AACP,gCAAgB;AADT,eADyB;AAIlCC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAJ4B;AAKlCK,cAAAA,MAAM,EAAE;AAL0B,aAAzB,CAJW;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAYtBR,YAAAA,OAAO,CAACC,GAAR;;AAZsB;AAAA;AAetBN,YAAAA,UAAU,CAAC,KAAD,CAAV;AAfsB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAVO,UAAU;AAAA;AAAA;AAAA,GAAhB;AAmBP,OAAO,IAAMO,UAAU;AAAA,sEAAG,kBAAOC,EAAP,EAAWf,UAAX;AAAA;AAAA;AAAA;AAAA;AACxBA,YAAAA,UAAU,CAAC,IAAD,CAAV;AADwB;AAAA;AAAA,mBAGhBC,KAAK,WAAIH,OAAJ,2BAA4BiB,EAA5B,EAHW;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAMtBV,YAAAA,OAAO,CAACC,GAAR;;AANsB;AAAA;AAStBN,YAAAA,UAAU,CAAC,KAAD,CAAV;AATsB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAVc,UAAU;AAAA;AAAA;AAAA,GAAhB;AAaP,OAAO,IAAME,UAAU;AAAA,sEAAG,kBAAOR,IAAP,EAAaR,UAAb;AAAA;AAAA;AAAA;AAAA;AACxBA,YAAAA,UAAU,CAAC,IAAD,CAAV;AADwB;AAAA;AAAA,mBAGhBC,KAAK,WAAIH,OAAJ,iBAAyB;AAClCW,cAAAA,OAAO,EAAE;AACP,gCAAgB;AADT,eADyB;AAIlCC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAJ4B;AAKlCK,cAAAA,MAAM,EAAE;AAL0B,aAAzB,CAHW;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAWtBR,YAAAA,OAAO,CAACC,GAAR;;AAXsB;AAAA;AActBN,YAAAA,UAAU,CAAC,KAAD,CAAV;AAdsB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAVgB,UAAU;AAAA;AAAA;AAAA,GAAhB","sourcesContent":["const baseUrl = 'https://todobacks.azurewebsites.net/api/Todo/'\n\nexport const getTodos = async (setLoading) => {\n  setLoading(true)\n  try {\n    const response = await fetch(`${baseUrl}GetTodos`)\n    const data = await response.json()\n    return data\n  }\n  catch(e) {\n    console.log(e)\n    return null\n  }\n  finally {\n    setLoading(false)\n  }\n}\n\nexport const createTodo = async (todo, setLoading) => {\n  setLoading(true)\n  try {\n    console.log(todo)\n    await fetch(`${baseUrl}CreateTodo`, {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(todo),\n      method: 'POST'\n    })\n  } catch (e) {\n    console.log(e)\n  }\n  finally {\n    setLoading(false)\n  }\n}\n\nexport const deleteTodo = async (id, setLoading) => {\n  setLoading(true)\n  try {\n    await fetch(`${baseUrl}DeleteTodo?id=${id}`)\n  }\n  catch(e) {\n    console.log(e)\n  }\n  finally {\n    setLoading(false)\n  }\n}\n\nexport const updateTodo = async (todo, setLoading) => {\n  setLoading(true)\n  try{\n    await fetch(`${baseUrl}UpdateTodo`, {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(todo),\n      method: 'PUT'\n    })\n  } catch (e) {\n    console.log(e)\n  }\n  finally {\n    setLoading(false)\n  }\n}"]}]}