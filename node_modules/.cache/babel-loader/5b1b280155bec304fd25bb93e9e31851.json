{"remainingRequest":"/Users/anna1/Desktop/TodoList/node_modules/thread-loader/dist/cjs.js!/Users/anna1/Desktop/TodoList/node_modules/babel-loader/lib/index.js!/Users/anna1/Desktop/TodoList/node_modules/eslint-loader/index.js??ref--14-0!/Users/anna1/Desktop/TodoList/src/fetcher.js","dependencies":[{"path":"/Users/anna1/Desktop/TodoList/src/fetcher.js","mtime":1640791370422},{"path":"/Users/anna1/Desktop/TodoList/babel.config.js","mtime":1640528780388},{"path":"/Users/anna1/Desktop/TodoList/node_modules/cache-loader/dist/cjs.js","mtime":1640528765355},{"path":"/Users/anna1/Desktop/TodoList/node_modules/thread-loader/dist/cjs.js","mtime":1640528765356},{"path":"/Users/anna1/Desktop/TodoList/node_modules/babel-loader/lib/index.js","mtime":1640528766771},{"path":"/Users/anna1/Desktop/TodoList/node_modules/eslint-loader/index.js","mtime":1640528765607}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9hbm5hMS9EZXNrdG9wL1RvZG9MaXN0L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yLmpzIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuanNvbi5zdHJpbmdpZnkuanMiOwp2YXIgYmFzZVVybCA9ICdodHRwczovL3RvZG9iYWNrcy5henVyZXdlYnNpdGVzLm5ldC9hcGkvVG9kby8nOwpleHBvcnQgdmFyIGdldFRvZG9zID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICB2YXIgX3JlZiA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZShzZXRMb2FkaW5nKSB7CiAgICB2YXIgcmVzcG9uc2UsIGRhdGE7CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgd2hpbGUgKDEpIHsKICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIHNldExvYWRpbmcodHJ1ZSk7CiAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAxOwogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNDsKICAgICAgICAgICAgcmV0dXJuIGZldGNoKCIiLmNvbmNhdChiYXNlVXJsLCAiR2V0VG9kb3MiKSk7CgogICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA3OwogICAgICAgICAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpOwoKICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgZGF0YSA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIGRhdGEpOwoKICAgICAgICAgIGNhc2UgMTE6CiAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAxMTsKICAgICAgICAgICAgX2NvbnRleHQudDAgPSBfY29udGV4dFsiY2F0Y2giXSgxKTsKICAgICAgICAgICAgY29uc29sZS5sb2coX2NvbnRleHQudDApOwogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCBudWxsKTsKCiAgICAgICAgICBjYXNlIDE1OgogICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMTU7CiAgICAgICAgICAgIHNldExvYWRpbmcoZmFsc2UpOwogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuZmluaXNoKDE1KTsKCiAgICAgICAgICBjYXNlIDE4OgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWUsIG51bGwsIFtbMSwgMTEsIDE1LCAxOF1dKTsKICB9KSk7CgogIHJldHVybiBmdW5jdGlvbiBnZXRUb2RvcyhfeCkgewogICAgcmV0dXJuIF9yZWYuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICB9Owp9KCk7CmV4cG9ydCB2YXIgY3JlYXRlVG9kbyA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgdmFyIF9yZWYyID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMih0b2RvLCBzZXRMb2FkaW5nKSB7CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBzZXRMb2FkaW5nKHRydWUpOwogICAgICAgICAgICBfY29udGV4dDIucHJldiA9IDE7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKHRvZG8pOwogICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDU7CiAgICAgICAgICAgIHJldHVybiBmZXRjaCgiIi5jb25jYXQoYmFzZVVybCwgIkNyZWF0ZVRvZG8iKSwgewogICAgICAgICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicKICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHRvZG8pLAogICAgICAgICAgICAgIG1ldGhvZDogJ1BPU1QnCiAgICAgICAgICAgIH0pOwoKICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAxMDsKICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICBfY29udGV4dDIucHJldiA9IDc7CiAgICAgICAgICAgIF9jb250ZXh0Mi50MCA9IF9jb250ZXh0MlsiY2F0Y2giXSgxKTsKICAgICAgICAgICAgY29uc29sZS5sb2coX2NvbnRleHQyLnQwKTsKCiAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgICBfY29udGV4dDIucHJldiA9IDEwOwogICAgICAgICAgICBzZXRMb2FkaW5nKGZhbHNlKTsKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5maW5pc2goMTApOwoKICAgICAgICAgIGNhc2UgMTM6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWUyLCBudWxsLCBbWzEsIDcsIDEwLCAxM11dKTsKICB9KSk7CgogIHJldHVybiBmdW5jdGlvbiBjcmVhdGVUb2RvKF94MiwgX3gzKSB7CiAgICByZXR1cm4gX3JlZjIuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICB9Owp9KCk7CmV4cG9ydCB2YXIgZGVsZXRlVG9kbyA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgdmFyIF9yZWYzID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMyhpZCwgc2V0TG9hZGluZykgewogICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgd2hpbGUgKDEpIHsKICAgICAgICBzd2l0Y2ggKF9jb250ZXh0My5wcmV2ID0gX2NvbnRleHQzLm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgc2V0TG9hZGluZyh0cnVlKTsKICAgICAgICAgICAgX2NvbnRleHQzLnByZXYgPSAxOwogICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDQ7CiAgICAgICAgICAgIHJldHVybiBmZXRjaCgiIi5jb25jYXQoYmFzZVVybCwgIkRlbGV0ZVRvZG8/aWQ9IikuY29uY2F0KGlkKSk7CgogICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDk7CiAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgX2NvbnRleHQzLnByZXYgPSA2OwogICAgICAgICAgICBfY29udGV4dDMudDAgPSBfY29udGV4dDNbImNhdGNoIl0oMSk7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKF9jb250ZXh0My50MCk7CgogICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICBfY29udGV4dDMucHJldiA9IDk7CiAgICAgICAgICAgIHNldExvYWRpbmcoZmFsc2UpOwogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLmZpbmlzaCg5KTsKCiAgICAgICAgICBjYXNlIDEyOgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBfY2FsbGVlMywgbnVsbCwgW1sxLCA2LCA5LCAxMl1dKTsKICB9KSk7CgogIHJldHVybiBmdW5jdGlvbiBkZWxldGVUb2RvKF94NCwgX3g1KSB7CiAgICByZXR1cm4gX3JlZjMuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICB9Owp9KCk7CmV4cG9ydCB2YXIgdXBkYXRlVG9kbyA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgdmFyIF9yZWY0ID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNCh0b2RvLCBzZXRMb2FkaW5nKSB7CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTQkKF9jb250ZXh0NCkgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQ0LnByZXYgPSBfY29udGV4dDQubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBzZXRMb2FkaW5nKHRydWUpOwogICAgICAgICAgICBfY29udGV4dDQucHJldiA9IDE7CiAgICAgICAgICAgIF9jb250ZXh0NC5uZXh0ID0gNDsKICAgICAgICAgICAgcmV0dXJuIGZldGNoKCIiLmNvbmNhdChiYXNlVXJsLCAiVXBkYXRlVG9kbyIpLCB7CiAgICAgICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJwogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkodG9kbyksCiAgICAgICAgICAgICAgbWV0aG9kOiAnUFVUJwogICAgICAgICAgICB9KTsKCiAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgIF9jb250ZXh0NC5uZXh0ID0gOTsKICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICBfY29udGV4dDQucHJldiA9IDY7CiAgICAgICAgICAgIF9jb250ZXh0NC50MCA9IF9jb250ZXh0NFsiY2F0Y2giXSgxKTsKICAgICAgICAgICAgY29uc29sZS5sb2coX2NvbnRleHQ0LnQwKTsKCiAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICAgIF9jb250ZXh0NC5wcmV2ID0gOTsKICAgICAgICAgICAgc2V0TG9hZGluZyhmYWxzZSk7CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDQuZmluaXNoKDkpOwoKICAgICAgICAgIGNhc2UgMTI6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ0LnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWU0LCBudWxsLCBbWzEsIDYsIDksIDEyXV0pOwogIH0pKTsKCiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZVRvZG8oX3g2LCBfeDcpIHsKICAgIHJldHVybiBfcmVmNC5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogIH07Cn0oKTs="},{"version":3,"sources":["/Users/anna1/Desktop/TodoList/src/fetcher.js"],"names":["baseUrl","getTodos","setLoading","fetch","response","json","data","console","log","createTodo","todo","headers","body","JSON","stringify","method","deleteTodo","id","updateTodo"],"mappings":";;;;AAAA,IAAMA,OAAO,GAAG,+CAAhB;AAEA,OAAO,IAAMC,QAAQ;AAAA,qEAAG,iBAAOC,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACtBA,YAAAA,UAAU,CAAC,IAAD,CAAV;AADsB;AAAA;AAAA,mBAGGC,KAAK,WAAIH,OAAJ,cAHR;;AAAA;AAGdI,YAAAA,QAHc;AAAA;AAAA,mBAIDA,QAAQ,CAACC,IAAT,EAJC;;AAAA;AAIdC,YAAAA,IAJc;AAAA,6CAKbA,IALa;;AAAA;AAAA;AAAA;AAQpBC,YAAAA,OAAO,CAACC,GAAR;AARoB,6CASb,IATa;;AAAA;AAAA;AAYpBN,YAAAA,UAAU,CAAC,KAAD,CAAV;AAZoB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAARD,QAAQ;AAAA;AAAA;AAAA,GAAd;AAgBP,OAAO,IAAMQ,UAAU;AAAA,sEAAG,kBAAOC,IAAP,EAAaR,UAAb;AAAA;AAAA;AAAA;AAAA;AACxBA,YAAAA,UAAU,CAAC,IAAD,CAAV;AADwB;AAGtBK,YAAAA,OAAO,CAACC,GAAR,CAAYE,IAAZ;AAHsB;AAAA,mBAIhBP,KAAK,WAAIH,OAAJ,iBAAyB;AAClCW,cAAAA,OAAO,EAAE;AACP,gCAAgB;AADT,eADyB;AAIlCC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAJ4B;AAKlCK,cAAAA,MAAM,EAAE;AAL0B,aAAzB,CAJW;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAYtBR,YAAAA,OAAO,CAACC,GAAR;;AAZsB;AAAA;AAetBN,YAAAA,UAAU,CAAC,KAAD,CAAV;AAfsB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAVO,UAAU;AAAA;AAAA;AAAA,GAAhB;AAmBP,OAAO,IAAMO,UAAU;AAAA,sEAAG,kBAAOC,EAAP,EAAWf,UAAX;AAAA;AAAA;AAAA;AAAA;AACxBA,YAAAA,UAAU,CAAC,IAAD,CAAV;AADwB;AAAA;AAAA,mBAGhBC,KAAK,WAAIH,OAAJ,2BAA4BiB,EAA5B,EAHW;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAMtBV,YAAAA,OAAO,CAACC,GAAR;;AANsB;AAAA;AAStBN,YAAAA,UAAU,CAAC,KAAD,CAAV;AATsB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAVc,UAAU;AAAA;AAAA;AAAA,GAAhB;AAaP,OAAO,IAAME,UAAU;AAAA,sEAAG,kBAAOR,IAAP,EAAaR,UAAb;AAAA;AAAA;AAAA;AAAA;AACxBA,YAAAA,UAAU,CAAC,IAAD,CAAV;AADwB;AAAA;AAAA,mBAGhBC,KAAK,WAAIH,OAAJ,iBAAyB;AAClCW,cAAAA,OAAO,EAAE;AACP,gCAAgB;AADT,eADyB;AAIlCC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAJ4B;AAKlCK,cAAAA,MAAM,EAAE;AAL0B,aAAzB,CAHW;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAWtBR,YAAAA,OAAO,CAACC,GAAR;;AAXsB;AAAA;AActBN,YAAAA,UAAU,CAAC,KAAD,CAAV;AAdsB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAVgB,UAAU;AAAA;AAAA;AAAA,GAAhB","sourcesContent":["const baseUrl = 'https://todobacks.azurewebsites.net/api/Todo/'\n\nexport const getTodos = async (setLoading) => {\n  setLoading(true)\n  try {\n    const response = await fetch(`${baseUrl}GetTodos`)\n    const data = await response.json()\n    return data\n  }\n  catch(e) {\n    console.log(e)\n    return null\n  }\n  finally {\n    setLoading(false)\n  }\n}\n\nexport const createTodo = async (todo, setLoading) => {\n  setLoading(true)\n  try {\n    console.log(todo)\n    await fetch(`${baseUrl}CreateTodo`, {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(todo),\n      method: 'POST'\n    })\n  } catch (e) {\n    console.log(e)\n  }\n  finally {\n    setLoading(false)\n  }\n}\n\nexport const deleteTodo = async (id, setLoading) => {\n  setLoading(true)\n  try {\n    await fetch(`${baseUrl}DeleteTodo?id=${id}`)\n  }\n  catch(e) {\n    console.log(e)\n  }\n  finally {\n    setLoading(false)\n  }\n}\n\nexport const updateTodo = async (todo, setLoading) => {\n  setLoading(true)\n  try{\n    await fetch(`${baseUrl}UpdateTodo`, {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(todo),\n      method: 'PUT'\n    })\n  } catch (e) {\n    console.log(e)\n  }\n  finally {\n    setLoading(false)\n  }\n}"]}]}